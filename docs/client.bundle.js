!function(c){function e(e){for(var t,n,r=e[0],a=e[1],l=e[2],u=0,o=[];u<r.length;u++)n=r[u],f[n]&&o.push(f[n][0]),f[n]=0;for(t in a)Object.prototype.hasOwnProperty.call(a,t)&&(c[t]=a[t]);for(s&&s(e);o.length;)o.shift()();return d.push.apply(d,l||[]),i()}function i(){for(var e,t=0;t<d.length;t++){for(var n=d[t],r=!0,a=1;a<n.length;a++){var l=n[a];0!==f[l]&&(r=!1)}r&&(d.splice(t--,1),e=u(u.s=n[0]))}return e}var n={},f={0:0},d=[];function u(e){if(n[e])return n[e].exports;var t=n[e]={i:e,l:!1,exports:{}};return c[e].call(t.exports,t,t.exports,u),t.l=!0,t.exports}u.m=c,u.c=n,u.d=function(e,t,n){u.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},u.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},u.t=function(t,e){if(1&e&&(t=u(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(u.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)u.d(n,r,function(e){return t[e]}.bind(null,r));return n},u.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return u.d(t,"a",t),t},u.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},u.p="";var t=window.webpackJsonp=window.webpackJsonp||[],r=t.push.bind(t);t.push=e,t=t.slice();for(var a=0;a<t.length;a++)e(t[a]);var s=r;d.push([165,1]),i()}({165:function(e,t,n){"use strict";var r=function(){function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&r(e.prototype,t),n&&r(e,n),e}}(),a=s(n(0)),l=s(n(6)),u=n(81),o=n(82),c=n(26),i=s(n(166)),f=n(54);n(167),n(168),n(169);var d=s(n(170));function s(e){return e&&e.__esModule?e:{default:e}}var p=(0,c.createStore)(i.default),m=function(e){var t=e.location;return a.default.createElement("div",null,a.default.createElement("h3",null,"No match for ",a.default.createElement("code",null,t.pathname)))},v=function(e){return a.default.createElement("div",{className:"sendBlock"})},h=function(e){return a.default.createElement("div",null)},b=function(e){var t=e.match.params.id;return a.default.createElement(DeatailsPage,{id:t})},E=function(e){function n(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n);var t=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(n.__proto__||Object.getPrototypeOf(n)).call(this,e));return t.state={},t}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(n,a.default.Component),r(n,[{key:"handleSend",value:function(e,t,n){this.setState({sent:!0,url:e,gps:t,timeFoto:n})}},{key:"componentDidUpdate",value:function(e,t){this.state.sent&&this.setState({sent:!1})}},{key:"render",value:function(){var e=this,t=this.state,n=t.sent;t.url,t.gps,t.timeFoto;return a.default.createElement(o.Provider,{store:p},a.default.createElement(u.HashRouter,null,a.default.createElement("div",{className:"appMain"},n&&a.default.createElement(u.Redirect,{to:"/new"}),a.default.createElement(d.default,null),a.default.createElement(f.Card,{interactive:!0,elevation:f.Elevation.TWO},a.default.createElement("h5",null,a.default.createElement("a",{href:"#"},"Card heading")),a.default.createElement("p",null,"Card content"),a.default.createElement(f.Button,null,"Submit"),a.default.createElement(u.Switch,null,a.default.createElement(u.Route,{exact:!0,path:"/",component:function(){return a.default.createElement(v,{handleSend:e.handleSend})}}),a.default.createElement(u.Route,{path:"/latest",component:h}),a.default.createElement(u.Route,{path:"/detail/:id",component:b}),a.default.createElement(u.Route,{component:m}))),a.default.createElement("footer",null,a.default.createElement("div",{className:".bp3-text-large"},a.default.createElement(u.Link,{to:"/"},"Nacc"))))))}}]),n}();l.default.render(a.default.createElement(E,null),document.getElementById("app"))},166:function(e,t,n){"use strict";n.r(t);var r=n(26);t.default=Object(r.combineReducers)({})},167:function(e,t,n){},168:function(e,t,n){},169:function(e,t,n){},170:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,a=n(0),l=(r=a)&&r.__esModule?r:{default:r},u=n(54);t.default=function(e){return l.default.createElement(u.Navbar,null,l.default.createElement(u.Navbar.Group,{align:u.Alignment.LEFT},l.default.createElement(u.Navbar.Heading,null,"Blueprint"),l.default.createElement(u.Navbar.Divider,null),l.default.createElement(u.Button,{className:"bp3-minimal",icon:"home",text:"Home"}),l.default.createElement(u.Button,{className:"bp3-minimal",icon:"document",text:"Files"})))}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,